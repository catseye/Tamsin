# Parser for Tamsin AST, written in Tamsin.
# Distributed under a BSD-style license; see LICENSE.

# Note that this contains support for some features which are not in 0.1.

main = grammar using scanner.

grammar    = {"@" & pragma & "."} &
             production & "." &
             {production & "."} & eof & 'ok'.
production = word & ["(" & term & {"," & term} & ")"
                    | "[" & expr0 & "]"] & "=" & expr0.
expr0      = expr1 & {("|" | "||") & expr1}.
expr1      = expr2 & {("&" | "&&") & expr2}.
expr2      = expr3 & ["using" & prodref].
expr3      = expr4 & [("→" | "->") & variable].
expr4      = expr5 & ["/" & texpr].
expr5      = "(" & expr0 & ")"
           | "[" & expr0 & "]"
           | "{" & expr0 & "}"
           | "!" & expr5
           | "set" & variable & "=" & texpr
           | "return" & texpr
           | "fail" & texpr
           | "print" & texpr
           | terminal
           | variable & [("←" | "<-") & texpr]
           | sq_string
           | prodref & ["(" & [texpr & {"," & texpr}] & ")"] & ["@" & texpr].
texpr      = term & {"+" & term}.
term       = atom & ["(" & [term & {"," & term}] & ")"]
           | variable.
atom       = word | sq_string.
terminal   = dq_string
           | ("«" | "<<") & texpr & ("»" | ">>").
prodref    = [modref & ":"] & word.
modref     = "$".
pragma     = "alias" & word & word & "=" & prodref
           | "unalias" & word.

word = $:alnum.
variable = $:upper.
sq_string = $:startswith('\'').
dq_string = $:startswith('"').

scanner = scan using $:utf8.
scan = skippable & (symbol | str('\'') | str('"') | sc_word).
symbol = "&" & "&" & '&&'
       | "|" & "|" & '||'
       | "-" & ">" & '->'
       | "<" & "-" & '<-'
       | "<" & "<" & '<<'
       | ">" & ">" & '>>'
       | "=" | "(" | ")" | "[" | "]" | "{" | "}" | "!" | "|" | "&" | ":"
       | "/" | "," | "." | "@" | "+" | "$" | "→" | "←" | "«" | "»".
str(Q) = «Q» → T & {(escape | !«Q» & any) → S & T ← T + S} & «Q» &
         return T + Q.
escape = "\\" & "n" & '\n'
       | "\\" & "r" & '\r'
       | "\\" & "t" & '\t'
       | "\\" & "\\" & '\\'
       | "\\" & "'" & '\''
       | "\\" & "\"" & '"'.
sc_word = $:alnum → T & { ($:alnum | "_") → S & T ← T + S } & T.
skippable = {whitespace | comment}.
whitespace = " " | "\t" | "\r" | "\n".
comment = "#" & {!"\n" & any} & "\n".
